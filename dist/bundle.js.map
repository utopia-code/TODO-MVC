{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://pec3_ej4/./src/models/todo.model.ts","webpack://pec3_ej4/./src/app.ts","webpack://pec3_ej4/./src/controllers/todo.controller.ts","webpack://pec3_ej4/./src/services/todo.service.ts","webpack://pec3_ej4/./src/views/todo.view.ts"],"sourcesContent":["/**\n * @class Model\n *\n * Manages the data of the application.\n */\n\nexport class Todo {\n  id: string;\n  text: string;\n  complete: boolean;\n\n  constructor({ text, complete }: { text: string; complete?: boolean } = { text: '', complete: false }) {\n    this.id = this.uuidv4();\n    this.text = text;\n    this.complete = complete || false;\n  }\n\n  uuidv4(): string {\n    return ([1e7].toString() + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c:string) =>\n      (\n        parseInt(c) ^\n        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (parseInt(c) / 4)))\n      ).toString(16)\n    );\n  }\n}\n","import { TodoController } from './controllers/todo.controller';\nimport { TodoService } from './services/todo.service';\nimport { TodoView } from './views/todo.view';\n\nconst app = new TodoController(new TodoService(), new TodoView());\n","import { Todo } from '../models/todo.model';\nimport { TodoService } from '../services/todo.service';\nimport { TodoView } from '../views/todo.view';\n\n/**\n * @class Controller\n *\n * Links the user input and the view output.\n *\n * @param model\n * @param view\n */\nexport class TodoController {\n  private service: TodoService;\n  private view: TodoView;\n  constructor(service: TodoService, view: TodoView) {\n    this.service = service;\n    this.view = view;\n\n    // Explicit this binding\n    this.service.bindTodoListChanged(this.onTodoListChanged);\n    this.view.bindAddTodo(this.handleAddTodo);\n    this.view.bindEditTodo(this.handleEditTodo);\n    this.view.bindDeleteTodo(this.handleDeleteTodo);\n    this.view.bindToggleTodo(this.handleToggleTodo);\n\n    // Display initial todos\n    this.onTodoListChanged(this.service.todos);\n  }\n\n  onTodoListChanged = (todos: Todo[]) => {\n    this.view.displayTodos(todos);\n  };\n\n  handleAddTodo = (todoText: string) => {\n    this.service.addTodo(todoText);\n  };\n\n  handleEditTodo = (id:string, todoText: string) => {\n    this.service.editTodo(id, todoText);\n  };\n\n  handleDeleteTodo = (id: string) => {\n    this.service.deleteTodo(id);\n  };\n\n  handleToggleTodo = (id: string) => {\n    this.service.toggleTodo(id);\n  };\n}\n  ","import { Todo } from '../models/todo.model';\n\n/**\n * @class Service\n *\n * Manages the data of the application.\n */\nexport class TodoService {\n  public todos: Todo[];\n  private onTodoListChanged: Function = () => {}; \n\n  constructor() {\n      const data = localStorage.getItem(\"todos\");\n      this.todos = (data ? JSON.parse(data) : []).map(\n          (todo: any) => new Todo(todo)\n      );\n  }\n\n  bindTodoListChanged(callback: Function) {\n    this.onTodoListChanged = callback;\n  }\n\n  _commit(todos: Todo[]) {\n    this.onTodoListChanged(todos);\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  addTodo(text: string) {\n    this.todos.push(new Todo({ text }));\n\n    this._commit(this.todos);\n  }\n\n  editTodo(id: string, updatedText: string) {\n    this.todos = this.todos.map(todo =>\n      todo.id === id\n        ? new Todo({\n            ...todo,\n            text: updatedText\n          })\n        : todo\n    );\n\n    this._commit(this.todos);\n  }\n\n  deleteTodo(_id: string) {\n    this.todos = this.todos.filter(({ id }) => id !== _id);\n\n    this._commit(this.todos);\n  }\n\n  toggleTodo(_id: string) {\n    this.todos = this.todos.map(todo =>\n      todo.id === _id ? new Todo({ ...todo, complete: !todo.complete }) : todo\n    );\n\n    this._commit(this.todos);\n  }\n}\n","import { Todo } from '../models/todo.model';\n\n/**\n * @class View\n *\n * Visual representation of the model.\n */\nexport class TodoView {\n  private app: HTMLElement;\n  private form: HTMLElement;\n  private input: HTMLInputElement;\n  private submitButton: HTMLElement;\n  private title: HTMLElement;\n  private todoList: HTMLElement;\n  private _temporaryTodoText: string;\n\n  constructor() {\n    this.app = this.getElement(\"#root\");\n    this.form = this.createElement(\"form\");\n    this.input = this.createElement(\"input\") as HTMLInputElement;\n    this.input.type = \"text\";\n    this.input.placeholder = \"Add todo\";\n    this.input.name = \"todo\";\n    this.submitButton = this.createElement(\"button\");\n    this.submitButton.textContent = \"Submit\";\n    this.form.append(this.input, this.submitButton);\n    this.title = this.createElement(\"h1\");\n    this.title.textContent = \"Todos\";\n    this.todoList = this.createElement(\"ul\", \"todo-list\");\n    this.app.append(this.title, this.form, this.todoList);\n\n    this._temporaryTodoText = \"\";\n    this._initLocalListeners();\n  }\n\n  get _todoText() {\n    return this.input.value;\n  }\n\n  _resetInput() {\n    this.input.value = \"\";\n  }\n\n  createElement(tag: string, className?: string) {\n    const element = document.createElement(tag);\n\n    if (className) element.classList.add(className);\n\n    return element;\n  }\n\n  getElement(selector: string) {\n    const element = document.querySelector(selector)! as HTMLElement;\n\n    return element;\n  }\n\n  displayTodos(todos: Todo[]) {\n    // Delete all nodes\n    while (this.todoList.firstChild) {\n      this.todoList.removeChild(this.todoList.firstChild);\n    }\n\n    // Show default message\n    if (todos.length === 0) {\n      const p = this.createElement(\"p\");\n      p.textContent = \"Nothing to do! Add a task?\";\n      this.todoList.append(p);\n    } else {\n      // Create nodes\n      todos.forEach((todo) => {\n        const li = this.createElement(\"li\");\n        li.id = todo.id;\n\n        const checkbox = this.createElement(\"input\") as HTMLInputElement;\n        checkbox.type = \"checkbox\";\n        checkbox.checked = todo.complete;\n\n        const span = this.createElement(\"span\") as HTMLInputElement;\n        span.contentEditable = \"true\";\n        span.classList.add(\"editable\");\n\n        if (todo.complete) {\n          const strike = this.createElement(\"s\");\n          strike.textContent = todo.text;\n          span.append(strike);\n        } else {\n          span.textContent = todo.text;\n        }\n\n        const deleteButton = this.createElement(\"button\", \"delete\");\n        deleteButton.textContent = \"Delete\";\n        li.append(checkbox, span, deleteButton);\n\n        // Append nodes\n        this.todoList.append(li);\n      });\n    }\n\n    // Debugging\n    console.log(todos);\n  }\n\n  _initLocalListeners() {\n    this.todoList.addEventListener(\"input\", (event: any) => {\n      if (event.target.className === \"editable\") {\n        this._temporaryTodoText = event.target.innerText;\n      }\n    });\n  }\n\n  bindAddTodo(handler: Function) {\n    this.form.addEventListener(\"submit\", (event: any) => {\n      event.preventDefault();\n\n      if (this._todoText) {\n        handler(this._todoText);\n        this._resetInput();\n      }\n    });\n  }\n\n  bindDeleteTodo(handler: Function) {\n    this.todoList.addEventListener(\"click\", (event: any) => {\n      if (event.target.className === \"delete\") {\n        const id = event.target.parentElement.id;\n\n        handler(id);\n      }\n    });\n  }\n\n  bindEditTodo(handler: Function) {\n    this.todoList.addEventListener(\"focusout\", (event: any) => {\n      if (this._temporaryTodoText) {\n        const id = event.target.parentElement.id;\n\n        handler(id, this._temporaryTodoText);\n        this._temporaryTodoText = \"\";\n      }\n    });\n  }\n\n  bindToggleTodo(handler: Function) {\n    this.todoList.addEventListener(\"change\", (event: any) => {\n      if (event.target.type === \"checkbox\") {\n        const id = event.target.parentElement.id;\n\n        handler(id);\n      }\n    });\n  }\n}\n"],"names":["Todo","constructor","text","complete","this","id","uuidv4","toString","replace","c","parseInt","crypto","getRandomValues","Uint8Array","service","view","onTodoListChanged","todos","displayTodos","handleAddTodo","todoText","addTodo","handleEditTodo","editTodo","handleDeleteTodo","deleteTodo","handleToggleTodo","toggleTodo","bindTodoListChanged","bindAddTodo","bindEditTodo","bindDeleteTodo","bindToggleTodo","data","localStorage","getItem","JSON","parse","map","todo","callback","_commit","setItem","stringify","push","updatedText","_id","filter","app","getElement","form","createElement","input","type","placeholder","name","submitButton","textContent","append","title","todoList","_temporaryTodoText","_initLocalListeners","_todoText","value","_resetInput","tag","className","element","document","classList","add","selector","querySelector","firstChild","removeChild","length","p","forEach","li","checkbox","checked","span","contentEditable","strike","deleteButton","console","log","addEventListener","event","target","innerText","handler","preventDefault","parentElement"],"sourceRoot":""}